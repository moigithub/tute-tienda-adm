// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Store {
  id         String      @id @default(uuid())
  name       String
  userId     String
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  billboards Billboard[]
  categories Category[]
  sizes      Size[]
  colors     Color[]
  Product    Product[]
  Order      Order[]
}

model Billboard {
  id         String     @id @default(uuid())
  storeId    String
  store      Store      @relation(fields: [storeId], references: [id])
  label      String
  imageUrl   String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  categories Category[]

  @@index([storeId])
}

model Category {
  id   String @id @default(uuid())
  name String

  storeId     String
  store       Store     @relation(fields: [storeId], references: [id])
  billboardId String
  billboard   Billboard @relation(fields: [billboardId], references: [id])

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Product   Product[]

  @@index([storeId])
  @@index([billboardId])
}

model Size {
  id    String @id @default(uuid())
  name  String
  value String

  storeId String
  store   Store  @relation(fields: [storeId], references: [id])

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Product   Product[]

  @@index([storeId])
}

model Color {
  id    String @id @default(uuid())
  name  String
  value String

  storeId String
  store   Store  @relation(fields: [storeId], references: [id])

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Product   Product[]

  @@index([storeId])
}

model Image {
  id  String @id @default(uuid())
  url String

  productId String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([productId])
}

model Product {
  id         String  @id @default(uuid())
  name       String
  price      Decimal
  isFeatured Boolean @default(false)
  isArchived Boolean @default(false)

  storeId    String
  store      Store    @relation(fields: [storeId], references: [id])
  categoryId String
  category   Category @relation(fields: [categoryId], references: [id])
  sizeId     String
  size       Size     @relation(fields: [sizeId], references: [id])
  colorId    String
  color      Color    @relation(fields: [colorId], references: [id])

  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  images    Image[]
  orders    OrderItem[]

  @@index([storeId])
  @@index([categoryId])
  @@index([sizeId])
  @@index([colorId])
}

model Order {
  id      String @id @default(uuid())
  storeId String
  store   Store  @relation(fields: [storeId], references: [id])

  orderItems OrderItem[]
  isPaid     Boolean     @default(false)
  phone      String      @default("")
  address    String      @default("")
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt

  @@index([storeId])
}

model OrderItem {
  id      String @id @default(uuid())
  orderId String
  order   Order  @relation(fields: [orderId], references: [id])

  productId String
  product   Product @relation(fields: [productId], references: [id])

  @@index([orderId])
  @@index([productId])
}
